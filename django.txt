Models/Databases:
1)models.Textfield(null=True,blank=True) #null allows database to store null/empty values and blank allows values to empty on submission/insertion
2)models.DateTimefield(auto_now=True) #automatically takes current timestamp and inserts it every time save method is called without us having to add this value
3)models.DateTimefield(auto_now_add=True) #automatically takes current timestamp and inserts it only the first time save method is called without us having to add this value
4)If a model is specified after another models uses it in a foreign key, you can write the model as a string in that other model.
5)models.ForeignKey(ModelName,on_delete=models.SET_NULL, null=True) # to allow foreign key value to be null/empty on deletion in the database
6)To use the built-in users table from Django, use: from django.db.contrib.auth.models import User
Admin:
In admin.py file of your app, to see your models in the admin panel, import model and use: admin.site.register(ModelName)

URL routing:
In the url.py file of your app, create an app_name variable and assign it a string value to add a namespace to your url so
that you can specify from which app the view is called when its view_name is specified in the template. Syntax:
{% url 'app_name:view_name' %}
'''admin.site.register(Drink)
admin.site.register(Food)''' ',Drink,Food'
'''class Drink(models.Model): #to add extra info without inheritance
    type=[('S', 'Soft drink'), ('J', 'Juice'), ('C', 'Caffeine')]
    drink_item = models.OneToOneField(Item,on_delete=models.CASCADE,primary_key=True)
    drink_type = models.CharField(max_length=2, choices=type)

class Food(models.Model):#to add extra info without inheritance
    type=[('burger', 'Burger'), ('pasta', 'Pasta'), ('sandwich', 'Sandwich'),('pizza', 'Pizza'),
    ('dessert', 'Dessert'),('set menu', 'Set Menu')]
    food_item = models.OneToOneField(Item,on_delete=models.CASCADE,primary_key=True)
    food_type = models.CharField(max_length=10, choices=type)'''



<div class="container-fluid mt-4">
        <h1 class="fw-bold h2">Products</h1>   
    <div class="card">
    <div class="card-header">
        <form class="d-flex flex-row justify-content-around">
            <input type="text" placeholder="Search.." name="search">
            <button class="btn btn-primary" type="submit"><i class="fa fa-search"></i></button>
          </form>
    </div>
    <div class="card-body">
        <table class="table text-dark" >
            <thead>
              <tr>
                <th scope="col">#</th>
                <th scope="col">Title</th>
                <th scope="col">Description</th>
                <!--<th scope="col">Handle</th>-->
                <th scope="col">Action</th>
              </tr>
            </thead>
            {% for article in object_list %}
            <li>a</li>
        {% endfor %}
            <tbody>
              <tr>
                <th scope="row">1</th>
                <td>Mark</td>
                <td>Otto</td>
                <td>@mdo</td>
                <td><button class="btn btn-success" id="edit">Edit</i></button></td>
              </tr>
              <tr>
                <th scope="row">2</th>
                <td>Jacob</td>
                <td>Thornton</td>
                <td>@fat</td>
              </tr>
              <tr>
                <th scope="row">3</th>
                <td colspan="2">Larry the Bird</td>
                <td>@twitter</td>
              </tr>
            </tbody>
          </table>
    </div>
    <div class="card-footer">Footer</div>
</div>
<script>
    $(document).ready(function(){
      $("#edit").click(function(){
        $(location).attr('href','https://www.w3schools.com');
      });
    });


    """
        <span class="step-links">
                        {% if page_obj.has_previous %}
                            <a href="?page=1">&laquo; first</a>
                            <a href="?page={{ page_obj.previous_page_number }}">previous</a>
                        {% endif %}
          
                          <span class="current">
                              Page {{ page_obj.number }} of {{ page_obj.paginator.num_pages }}
                          </span>
          
                        {% if page_obj.has_next %}
                            <a href="?page={{ page_obj.next_page_number }}">next</a>
                            <a href="?page={{ page_obj.paginator.num_pages }}">last &raquo;</a>
                        {% endif %}
                      </span>
                      <ul class="">
                        {% if page_obj.has_previous %}
                        <li class="page-item"><a class="page-link" href="?page={{ page_obj.previous_page_number }}">&laquo;</a></li>
                      {% else %}
                        <li class="disabled"><span>&laquo;</span></li>
                      {% endif %}
                      {% for i in paginator.page_range %}
                        {% if page_obj.number == i %}
                          <li class="active"><span>{{ i }} <span class="current">(current)</span></span></li>
                        {% else %}
                          <li class="page-item"><a class="page-link" href="?page={{ i }}">{{ i }}</a></li>
                        {% endif %}
                      {% endfor %}
                      {% if page_obj.has_next %}
                        <li class="page-item"><a class="page-link" href="?page={{ page_obj.next_page_number }}">&raquo;</a></li>
                      {% else %}
                        <li class="disabled"><span>&raquo;</span></li>
                      {% endif %}
                    </ul>
"""